@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('../styles/style.css');

@layer base {
  :root {
    /* HSL Color System - Systematic base colors with automatic light/dark conversion */
    /* Concept: Define light theme values, automatically invert L (100% - L) for dark */

    /* Light Theme Base HSL Values - These will be systematically inverted for dark mode */
  --hsl-base-bg-light: 98%;      /* Near white: ~98% lightness */
  --hsl-base-fg-light: 10%;      /* Dark text: ~10% lightness */
  --hsl-base-card-light: 100%;   /* Pure white cards: ~100% lightness */
  --hsl-base-card-fg-light: 9%;  /* Dark card text: ~9% lightness */
  --hsl-base-muted-light: 96%;   /* Light gray: ~96% lightness */
  --hsl-base-muted-fg-light: 45%; /* Medium gray text: ~45% lightness */
  --hsl-base-border-light: 90%;   /* Light borders: ~90% lightness */
  --hsl-base-input-light: 95%;    /* Light inputs: ~95% lightness */

    /* Automatic Dark Mode Conversion: Calculate by subtracting base light values from 100% */
    /* So 100% - 98% = 2% for dark background, creating perfect harmonious inversion */

    /* Light Mode: Uses the base light values */
    --background: 0 0% var(--hsl-base-bg-light);
    --foreground: 0 0% var(--hsl-base-fg-light);
    --card: 0 0% var(--hsl-base-card-light);
    --card-foreground: 0 0% var(--hsl-base-card-fg-light);
    --popover: 0 0% var(--hsl-base-card-light);
    --popover-foreground: 0 0% var(--hsl-base-card-fg-light);

    /* Primary color - Deep Indigo (maintains vibrancy in both modes) */
    --primary: 240 100% 65%;
    --primary-foreground: 0 0% 98%;
    /* Secondary color - Warm Silver */
    --secondary: 0 0% 88%;
    --secondary-foreground: 0 0% 9%;

    --muted: 0 0% var(--hsl-base-muted-light);
    --muted-foreground: 0 0% var(--hsl-base-muted-fg-light);
    --accent: 195 100% 50%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% var(--hsl-base-fg-light);
    --border: 0 0% var(--hsl-base-border-light);
    --input: 0 0% var(--hsl-base-input-light);
    --ring: 0 0% var(--hsl-base-fg-light);

    --radius: 0.75rem;

    /* Chart colors - Vibrant and theme-independent */
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;

    /* Custom colors - Theme-independent vibrant hues */
    --gold: 45 93% 58%;
    --gold-foreground: 26 83% 14%;
    --emerald: 160 84% 39%;
    --emerald-foreground: 155 84% 74%;
  }

  .dark {
    /* Dark Mode: Automatic HSL Lightness Inversion */
    /* Principle: For harmonious themes, subtract light L value from 100% */
    --background: 0 0% calc(100% - var(--hsl-base-bg-light));
    --foreground: 0 0% calc(100% - var(--hsl-base-fg-light));
    --card: 0 0% calc(100% - var(--hsl-base-card-light));
    --card-foreground: 0 0% calc(100% - var(--hsl-base-card-fg-light));
    --popover: 0 0% calc(100% - var(--hsl-base-card-light));
    --popover-foreground: 0 0% calc(100% - var(--hsl-base-card-fg-light));

    /* Maintain same primary/secondary vibrancy */
    --primary: 240 100% 65%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 88%;
    --secondary-foreground: 0 0% 9%;

    --muted: 0 0% calc(100% - var(--hsl-base-muted-light));
    --muted-foreground: 0 0% calc(100% - var(--hsl-base-muted-fg-light));
  --accent: 195 100% 50%;
  --accent-foreground: 0 0% calc(100% - 9%);
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% calc(100% - var(--hsl-base-fg-light));
    --border: 0 0% calc(100% - var(--hsl-base-border-light));
    --input: 0 0% calc(100% - var(--hsl-base-input-light));
    --ring: 0 0% calc(100% - var(--hsl-base-fg-light));

    /* Chart colors adapted for dark backgrounds */
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;

    /* Custom colors maintain vibrancy */
    --gold: 45 93% 58%;
    --gold-foreground: 20 14.3% 4.1%;
    --emerald: 160 84% 39%;
    --emerald-foreground: 155 84% 74%;
  }

  /* Add scroll padding for fixed navbar */
  html {
    scroll-padding-top: 4rem;
  }

  /* Make outline buttons have gray border in dark mode */
  .dark button[data-variant="outline"],
  .dark .border-input {
    border-color: hsl(0 0% 60%); /* Medium gray border in dark mode */
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    transition: background-color 0.3s ease, color 0.3s ease;
  }
}

@layer components {
  .animate-fade-in {
    animation: fadeIn 0.5s ease-in-out;
  }

  .animate-slide-up {
    animation: slideUp 0.5s ease-out;
  }

  .animate-scale-in {
    animation: scaleIn 0.3s ease-out;
  }

  .gradient-gold {
    background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
  }

  .gradient-emerald {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  }

  .gradient-blue-purple {
    background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
  }

  .glass-effect {
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .dark .glass-effect {
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(156, 163, 175, 0.5);
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(156, 163, 175, 0.7);
}

.dark ::-webkit-scrollbar-thumb {
  background: rgba(75, 85, 99, 0.5);
}

.dark ::-webkit-scrollbar-thumb:hover {
  background: rgba(75, 85, 99, 0.7);
}

/* Smooth transitions for theme changes */
* {
  transition: border-color 0.3s ease, background-color 0.3s ease, color 0.3s ease;
}

/* Loading animation */
.loading-dots {
  display: inline-flex;
  gap: 2px;
}

.loading-dots div {
  width: 4px;
  height: 4px;
  border-radius: 50%;
  background-color: currentColor;
  animation: loading-bounce 1.4s ease-in-out infinite both;
}

.loading-dots div:nth-child(1) {
  animation-delay: -0.32s;
}
.loading-dots div:nth-child(2) {
  animation-delay: -0.16s;
}

@keyframes loading-bounce {
  0%,
  80%,
  100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}

@keyframes star-container {
    0% {
      transform: translateY(0) translateX(0);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translateY(100vh) translateX(20px);
      opacity: 0;
    }
  }
  
  @keyframes star-main {
    0% {
      transform: scale(0);
    }
    10% {
      transform: scale(1);
    }
    90% {
      transform: scale(1);
    }
    100% {
      transform: scale(0);
    }
  }
  
  @keyframes star-trail {
    0% {
      transform: translateY(0);
      opacity: 1;
    }
    100% {
      transform: translateY(-100px);
      opacity: 0;
    }
  }
  
  .animate-star-container {
    animation: star-container linear infinite;
    left: var(--star-left);
    animation-delay: var(--star-delay);
    animation-duration: var(--star-duration);
  }
  
  .animate-star-main {
    animation: star-main linear infinite;
    width: var(--star-size);
    height: var(--star-size);
  }
  
  .animate-star-trail {
    animation: star-trail linear infinite;
    width: var(--trail-size);
    height: var(--trail-size);
    opacity: var(--trail-opacity);
    top: var(--trail-top);
    animation-delay: var(--trail-delay);
  }

  /* Map marker styles */
  .job-marker,
  .user-marker {
    pointer-events: auto;
  }

  .job-marker:hover,
  .user-marker:hover {
    z-index: 10;
  }

/* Character clamp for optimal readability */
.readable-text {
  max-width: clamp(45ch, 50%, 75ch);
}